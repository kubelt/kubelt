;; sdk/shadow-cljs.edn

{:source-paths
 ["src/dev"
  "src/main"
  "src/test"]

 :dependencies
 [;; data format for conveying values between applications
  [com.cognitect/transit-cljs "0.8.269"]
  ;; a pure Clojure/Script logging library
  [com.taoensso/timbre "5.1.2"]
  ;; immutable database and Datalog query engine
  [datascript/datascript "1.3.7"]
  ;; fast, idiomatic pretty-printer
  [fipp/fipp "0.6.25"]
  ;; a micro-framework for building data-driven applications
  [integrant/integrant "0.8.0"]
  ;; facilities for async programming and communication
  [org.clojure/core.async "1.4.627"]
  ;; fast JSON encoding and decoding
  [metosin/jsonista "0.3.5"]
  ;; data-driven schemas for Clojure/Script
  [metosin/malli "0.8.0"]
  ;; a fast data-driven router for Clojure(Script)
  [metosin/reitit-core "0.5.15"]
  ;; http routing with interceptors for reitit
  [metosin/reitit-http "0.5.15"]
  ;; common interceptors for reitit
  [metosin/reitit-interceptors "0.5.15"]
  ;; malli schema coercion for reitit
  [metosin/reitit-malli "0.5.15"]
  ;dj- support for sieppari interceptors for reitit
  [metosin/reitit-sieppari "0.5.15"]
  ;; generate swagger2 apidocs for reitit
  [metosin/reitit-swagger "0.5.15"]
  ;; tools for working with command line arguments
  [org.clojure/tools.cli "1.0.206"]]

 ;;:nrepl {:init-ns user.shared}

 ;; Configuration for development-time HTTP server.
 :dev-http {8021 "web/web-test"}

 ;; Built-in targets include:
 ;; :browser
 ;; :node-library
 ;; :node-script

 ;; To compile a development build:
 ;; $ npx shadow-cljs compile sdk|cli|web
 ;;
 ;; To compile a release build:
 ;; $ npx shadow-cljs release sdk|cli|web

 ;; It is possible to use shadow-cljs to invoke Clojure code, either to
 ;; run a standalone command or potentially as part of a build (TBD). To
 ;; invoke an example Clojure command:
 ;;   $ npm run cmd:example
 ;; This runs:
 ;;   $ npx shadow-cljs run build.command/example
 ;; Available options:
 ;; * -o / --out-file :: output file name ["target/example.txt"]

 ;; This build target generates a test file but doesn't run it:
 ;; $ npx shadow-cljs compile/release test
 ;;
 ;; When :autorun is set this is performed automatically:
 ;; $ node target/sdk-test.js
 ;;
 ;; The default test entrypoint, provided by shadow-cljs, executes
 ;; cljs.test tests. If you want to use another testing framework
 ;; you'll need to specify a new entrypoint by setting :main.

 :builds
 {;; This is the core Node.js library that provides the Kubelt SDK,
  ;; compiled for use with Node.js.
  :sdk
  {:target :node-library
   ;; Each keyword in the :exports map is available in the generated
   ;; library with that name.
   :exports {:v1 com.kubelt.sdk/node-v1}
   :compiler-options {;; :none :simple :advanced
                      :optimizations :advanced
                      :infer-externs :true
                      :output-feature-set :es-next}
   :output-to "packages/sdk-js/lib/sdk.js"}

  :sdk-test
  {:target :node-test
   :output-to "target/sdk-test.js"
   :ns-regexp "-test$"
   :autorun true}
  
  ;; This is the CommonJS module target
  :sdk-module
  {:target :npm-module
   :output-dir "packages/sdk-module/lib/"
   :entries [ com.kubelt.sdk ] }

  ;:sdk-module
  ;{:target :node-test
   ;:output-to "target/sdk-test.js"
   ;:ns-regexp "-test$"
   ;:autorun true}

  ;; This is the core Node.js library that provides the Kubelt SDK,
  ;; compiled for use in the browser.
  :web
  {:target :browser
   :js-options {:entry-keys ["module" "browser" "main"]}
   :output-dir "packages/web/lib"
   :asset-path "/js"
   :modules {:base {:entries [com.kubelt.sdk]}
             :npm {:depends-on #{:base}}
             :web {:depends-on #{:base}
                   :init-fn com.kubelt.sdk/web-v1}}
   :compiler-options {:output-feature-set :browser-2021
                      :optimizations :advanced}}

  :web-test
  {:target :browser-test
   :test-dir "target/web-test"
   :ns-regexp "-test$"}

  :p2p
  {:target :node-script
   :main com.kubelt.p2p/main!
   :devtools {:before-load-async com.kubelt.p2p/stop!
              :after-load-async com.kubelt.p2p/start!}
   :compiler-options {:optimizations :advanced}
   :output-to "packages/p2p/lib/p2p.js"}

  ;; TODO p2p-test

  ;; This is a development CLI used to run various commands for testing,
  ;; preparing data, or performing other non-customer-facing operations.
  :ddt
  {:target :node-script
   :main com.kubelt.ddt/main
   :compiler-options {:optimizations :simple
                      :infer-externs :true
                      :output-feature-set :es-next}
   :output-to "packages/ddt/lib/ddt.js"}

  :kbt
  {:target :node-script
   :main com.kubelt.kbt/main
   :compiler-options {:optimizations :simple
                      :infer-externs :auto
                      :output-feature-set :es-next}
   :output-to "packages/kbt/lib/kbt.js"}

  :kbt-test
  {:target :node-test
   :output-to "target/kbt-test.js"
   :ns-regexp "-test$"
   :autorun true}}}
