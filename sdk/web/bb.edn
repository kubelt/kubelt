{:min-bb "0.7.0"
 :tasks
 {:requires
  [[babashka.classpath :as cp]
   [babashka.fs :as fs]
   [babashka.process :as bpr]
   [clojure.edn :as edn]
   [clojure.java.io :as io]
   [clojure.string :as str]]
  :init
  ;; TODO generate $HOME/.npmrc configuration
  ;; TODO run HTTP server for tests
  ;; TODO version increment during releases
  ;; TODO supply version as argument?
  ;; TODO run tests
  (do
    ;; Add shared build code to classpath.
    (cp/add-classpath "../bb")
    (require '[com.kubelt.build :as kb])
    ;; Extract version from package.json.
    (def version (kb/package-version "package.json"))
    ;; Get the path to the SDK root.
    (def sdk-root (str (fs/canonicalize ".."))))
  ;;:enter
  ;;:leave

  npm:install
  {:doc "Install npm dependencies"
   :task (shell "npm install")}

  build:web
  {:doc "Build a JavaScript web version of the SDK"
   :depends [npm:install]
   :task (shell {:dir sdk-root} "npx shadow-cljs compile web")}

  build:web:test
  {:doc "Build a JavaScript web version of the SDK tests"
   :depends [npm:install]
   :task (shell {:dir sdk-root} "npx shadow-cljs release web-test")}

  pack:web
  {:doc "Create an npm package"
   :depends [build:web]
   :task (shell "npm pack")}

  publish:web
  {:doc "Publish the SDK for web as an npm package"
   :depends [pack:web]
   :task (let [tgz-name (str/join "" ["kubelt-web-" version ".tgz"])
               pack-file (first (fs/glob "." tgz-name))]
           (if-not pack-file
             (throw (ex-info "missing npm package.tgz")))
           (shell "npm publish" pack-file))}}}
