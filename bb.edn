{:min-bb "0.7.0"
 :tasks
 {:requires
  [[babashka.classpath :as cp]
   [babashka.fs :as fs]
   [babashka.process :as bpr]
   [clojure.edn :as edn]
   [clojure.java.io :as io]
   [clojure.set :as cs]
   [clojure.string :as str]]
  :init
  (do
    ;; Add shared build code to classpath.
    (cp/add-classpath "./bb")
    (require '[com.kubelt.cli :as cli])
    (require '[com.kubelt.environ :as environ])
    (require '[com.kubelt.package :as package])
    (require '[com.kubelt.semver :as semver])
    (require '[com.kubelt.shadow :as shadow])
    (require '[com.kubelt.time :as time])
    ;; Extract version from package.json.
    (def version (cli/release-version "package.json" *command-line-args*)))

  ;; Development
  ;; ---------------------------------------------------------------------------

  semver:parse
  (let [version-map (semver/parse version)]
    (println (semver/to-str version-map)))

  package:version
  {:doc "Print out the package.json version"
   :task (println version)}

  package:options
  {:doc "Print out the CLI options."
   :task (prn (cli/parse-options *command-line-args*))}

  timestamp:iso-date
  {:doc "Print out the date in ISO format"
   :task (println (time/iso-date))}

  cmd:example
  {:doc "Invoke Clojure build script via shadow-cljs."
   :task (shell "npx shadow-cljs run build.command/example")},

  ;; Tasks
  ;; ---------------------------------------------------------------------------

  ;; TODO generate Apache Maven .m2/settings.xml include GitHub package
  ;; repository setup. User will have to specify their username and
  ;; personal access token and put the file into the right spot.

  ;; TODO generate $HOME/.npmrc configuration

  lint:init
  {:doc "Initialize the linter"
   :task (do
           ;; Create the .clj-kondo directory if it doesn't exist.
           (let [kondo-dir ".clj-kondo"]
             (if-not (fs/directory? kondo-dir)
               (fs/create-dir kondo-dir)))
           ;; Pre-populate linter directory with analysis results.
           (let [args ["-M:kondo" "--parallel" "--dependencies" "--copy-configs" "--lint" "src/"]
                 command (str/join " " args)]
             (clojure command)))}

  lint:dev
  {:doc ""
   :task (let [dir "src/dev"]
           (clojure (str/join " " ["-M:kondo" "--parallel" "--lint" dir])))}

  lint:main
  {:doc ""
   :task (let [dir "src/main"]
           (clojure (str/join " " ["-M:kondo" "--parallel" "--lint" dir])))}

  lint:test
  {:doc ""
   :task (let [dir "src/test"]
           (clojure (str/join " " ["-M:kondo" "--parallel" "--lint" dir])))}

  lint:all
  {:doc ""
   :task (let [dir "src/all"]
           (clojure (str/join " " ["-M:kondo" "--parallel" "--lint" dir])))}

  build:ddt:develop
  {:doc ""
   :task (shell "npx shadow-cljs compile ddt")}

  build:ddt:release
  {:doc ""
   :task (shell "npx shadow-cljs release ddt")}

  build:kbt:develop
  {:doc ""
   :task (shell "npx shadow-cljs compile kbt")}

  build:kbt:release
  {:doc ""
   :task (shell "npx shadow-cljs release kbt")}

  build:p2p:develop
  {:doc ""
   :task (shell "npx shadow-cljs compile p2p")}

  build:p2p:release
  {:doc ""
   :task (shell "npx shadow-cljs release p2p")}

  build:sdk:develop
  {:doc ""
   :task (shell "npx shadow-cljs compile sdk")}

  build:sdk:release
  {:doc ""
   :task (shell "npx shadow-cljs release sdk")}

  build:web:develop
  {:doc ""
   :task (shell "npx shadow-cljs compile web")}

  build:web:release
  {:doc ""
   :task (shell "npx shadow-cljs release web")}

  test:sdk:cljs:develop
  {:doc ""
   :task (shell "npx shadow-cljs compile sdk-test")}

  test:sdk:cljs:release
  {:doc ""
   :task (shell "npx shadow-cljs release sdk-test")}

  test:sdk:js:develop
  {:doc ""
   :depends [build:sdk:develop]
   :task (shell {:dir "packages/sdk-js/__tests__"} "node api-v1.js")}

  test:sdk:js:release
  {:doc ""
   :depends [build:sdk:release]
   :task (shell {:dir "packages/sdk-js/__tests__"} "node api-v1.js")}

  test:web:develop
  {:doc ""
   :task (shell "npx shadow-cljs compile web-test")}

  test:web:release
  {:doc ""
   :task (shell "npx shadow-cljs release web-test")}}}
