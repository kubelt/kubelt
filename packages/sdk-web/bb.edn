;; packages/sdk-web/bb.edn
{:paths []
 :deps {uberdeps/uberdeps {:mvn/version "1.1.2"}}
 :min-bb "0.8.0"
 :tasks
 {:requires
  [[babashka.classpath :as cp]
   [babashka.fs :as fs]
   [clojure.edn :as edn]
   [clojure.java.io :as io]
   [clojure.set :as cs]
   [clojure.string :as str]]
  :init
  (do
    ;; Get the path to the SDK root.
    (def sdk-root (str (fs/canonicalize (fs/path ".." ".."))))
    ;; Add shared build code to classpath.
    (cp/add-classpath (str (fs/path sdk-root "bb")))
    (require '[com.kubelt.cli :as cli])
    (require '[com.kubelt.package :as package])
    ;; Extract version from package.json.
    (def version (cli/release-version "package.json" *command-line-args*)))

  ;; Tasks
  ;; ---------------------------------------------------------------------------

  ;; Compare the dependencies in parent package.json and local
  ;; package.json For any deps that intersect, make sure they have the
  ;; same version. Note that this only detects the error when the
  ;; necessary dependencies are present in both files; if a dependency
  ;; is missing we can't currently detect that.
  package:check
  {:doc "Check for package.json version discrepancies"
   :task (let [pkg-parent (str (fs/file sdk-root "package.json"))
               pkg-local (str (fs/file "." "package.json"))
               mismatches (package/mismatches pkg-parent pkg-local)]
           (when (not (empty? mismatches))
             (throw (ex-info "mismatched versions" mismatches))))}

  compile:develop
  {:doc "Compile a development version of SDK/web"
   :depends [package:check]
   :task (shell {:dir sdk-root} "npx shadow-cljs compile sdk-web")}

  compile:release
  {:doc "Compile a release version of SDK/web"
   :depends [package:check]
   :task (shell {:dir sdk-root} "npx shadow-cljs release sdk-web")}

  build:develop
  {:doc "Build and transpile a development version of SDK/web"
   :depends [compile:develop]
   :task (shell "npx webpack --config webpack.config.js")}

  build:release
  {:doc "Build and transpile a release version of SDK/web"
   :depends [compile:release]
   :task (shell "npx webpack --mode=production --node-env=production")}}}
